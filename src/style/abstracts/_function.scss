/**
 * 辅助函数
 */
@import "config";

/* 转换成字符串 */
@function selectorToString($selector) {
  $selector: inspect($selector);
  $selector: str-slice($selector, 2, -2);

  @return $selector;
}

/* 判断是否存在 Modifier */
@function containsModifier($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, $modifierSeparator) {
    @return true;
  } @else {
    @return false;
  }
}

/* 判断是否存在伪类 */
@function containsPseudo($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, ":") {
    @return true;
  } @else {
    @return false;
  }
}
// 字符串翻转，添加#
@function reverseString($string) {
  $result: "";
  $str: quote($string);
  $len: str-length($str);
  @for $i from $len through 1 {
    $current-str: str-slice($str, $i, $i);
    $result: $result + $current-str;
  }
  @return unquote(str-insert($result, "#", 1));
}

// 指数计算
@function exponential($number, $n) {
  $result: $number;
  @if $n == 0 {
    $result: 1;
  } @else if ($n == 1) {
    $result: $result;
  } @else {
    @for $i from 1 through $n {
      @if $i == 1 {
        $result: $number;
      } @else {
        $result: $result * $number;
      }
    }
  }
  @return $result;
}

/**
 * 进制转换 16进制转成10进制
 * @params $number 需要转换的数字
 */
@function hexToDec($number) {
  $maps: (
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
    "a": 10,
    "b": 11,
    "c": 12,
    "d": 13,
    "e": 14,
    "f": 15,
  );
  // 最后输出的结果
  $res: 0;

  // 是16进制
  $str: to-lower-case(inspect($number));
  $len: str-length($str);
  $list: str-slice($str, 2, $len);
  $list-len: str-length($list);
  $curret-res: 0;
  $current-str: 0;
  $value: 0;

  @for $i from $list-len through 1 {
    $str-index: $list-len - $i + 1;
    $current-str: str-slice($list, $str-index, $str-index);
    $value: map-get($maps, $current-str);
    $curret-res: $value * exponential(16, ($i - 1));
    $res: $curret-res + $res;
  }
  @return $res;
}
/**
 * 进制转换 10进制转成16进制
 * @params $number 需要转换的数字
 */
@function decToHex($number) {
  $list: "";
  $maps: "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f";
  // 余数列表
  $remainder: nth($maps, ($number % 16 + 1));
  $list: $list + $remainder;
  // 除数
  $divisor: floor($number / 16);

  @while $divisor >= 16 {
    $remainder: nth($maps, ($divisor % 16 + 1));
    $list: $list + $remainder;
    $divisor: floor($divisor / 16);
  }
  @if $divisor < 16 {
    $remainder: nth($maps, ($divisor % 16 + 1));
    $list: $list + $remainder;
  }
  @return reverseString($list);
}

@function mixColor($color1, $color2, $percent) {
  $c1: hexToDec($color1);
  $c2: hexToDec($color2);
  $res: floor($c1 * $percent + (1-$percent) * $c2);
  $res: decToHex($res);
  @return $res;
}
